import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error
import keras
from keras.layers import Dense,Activation
from keras.models import Sequential
from sklearn.model_selection import train_test_split

df=pd.read_csv('BostonHousing.csv')
df

df.isnull().sum()
# col_names=df.columns[df.isnull().any()].tolist()
# col_names
# for name in col_names:
#     cmean=df[name].mean()
#     df[name].fillna(cmean,inplace=True)
# df.isnull().any()

X=df.iloc[:,:-1]
y=df.iloc[:,-1]
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

model=Sequential()
model.add(Dense(128,activation='relu'))
model.add(Dense(64,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(16,activation='relu'))
model.add(Dense(1))

model.compile(optimizer='adam',loss='mean_squared_error',metrics=['mae'])
model.fit(X_train,y_train,epochs=100,validation_split=0.1)

y_pred=model.predict(X_test)

r2=r2_score(y_test,y_pred)
print(r2)
mse=mean_squared_error(y_test,y_pred)
print(mse)
